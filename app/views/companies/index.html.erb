<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>




<header>
  <%= link_to 'New Company', new_company_path %>
  <form action="#" id="search-form">
    <input type="text" name="search" id="search" placeholder="Find Company">
    <button type="submit" id="search-btn">search</button>
  </form>
</header>

<p id="notice"><%= notice %></p>

<div class="map-container">
  <div id="map"></div>
  <div class="type-table">
    <table>
      <thead>
        <th>Key</th>
      </thead>
      <tbody>
        <% Company::TYPES.each do |type| %>
          <tr>
            <td class="type-key", id="<%= type %>"><input type="checkbox", name="<%= type %>", checked="checked"><%= type %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<br>

<%= render 'display' %>

<br><br>
<h1>Listing Companies</h1>

<table>
  <thead>
    <tr>
      <th>Lat</th>
      <th>Lng</th>
      <th>Address</th>
      <th>Name</th>
      <th>Type</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @companies.each do |company| %>
      <tr>
        <td><%= company.latitude %></td>
        <td><%= company.longitude %></td>
        <td><%= company.address %></td>
        <td><%= company.name %></td>
        <td><%= company.type_of %></td>
        <td><%= link_to 'Show', company %></td>
        <td><%= link_to 'Edit', edit_company_path(company) %></td>
        <td><%= link_to 'Destroy', company, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<script type="text/javascript">
 $(document).ready(function(){
  
    var json = <%=raw @hash.to_json %>
    
    var handler;
    var markers = [];

    function buildMap(){
      var randomise = 20;
      handler = Gmaps.build('Google', { markers: { maxRandomDistance: randomise, doClustering: true } });
      // handler = Gmaps.build("Google", { markers: { maxRandomDistance: randomise, clusterer: {gridSize: 10, maxZoom: 16} } })
      handler.buildMap({ internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(json);
        _.each(json, function(elt, index){
          _.extend(markers[index], elt);
        });
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds(); 
     });
    }

    function showCategories(categories){
      var shownMakers = []
      _.each(markers, function(marker){
        if (_.contains(categories, marker.cat)){
          marker.show(); 
          shownMakers.push(marker);
        }
        else
          marker.hide();
      })
      handler.resetBounds();
      handler.bounds.extendWith(shownMakers);
      handler.fitMapToBounds();
    }

    function selectMarker(name){
      _.each(markers, function(marker){
          if(marker.title.toLowerCase() == name.toLowerCase()){
          handler.getMap().setZoom(14);
          marker.setMap(handler.getMap());
          marker.panTo();
          google.maps.event.trigger(marker.getServiceObject(), 'click');
        }
      })
    }
    
    $("input[type='checkbox']").on('click', function(evt, foo){
      var checkedCategories = [];
      $("input:checked").each(function(index, elt){
        checkedCategories.push($(elt).attr('name'));
      });
      showCategories(checkedCategories);
    });

    $(".select-link").click(function(){
      selectMarker(this.id);
    });

    $("#search-btn").click(function() {
      var query = document.forms["search-form"]["search"].value;
      selectMarker(query);
      return false;
    });
    
    buildMap();
  });
</script>
